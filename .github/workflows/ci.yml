name: Django CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for Postgres to be ready
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for postgres..."
            sleep 1
          done

      - name: Run migrations
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
        run: |
          python manage.py migrate

      - name: Collect static files
        run: |
          python manage.py collectstatic --noinput

      - name: List static files for debugging
        run: |
          ls -R staticfiles

      - name: Run tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
        run: |
          pytest

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy to Render
        env:
          PYTHONPATH: /opt/render/project/src
          DJANGO_SETTINGS_MODULE: unky_rick.settings
        run: |
          # Clear any cached Python files
          find . -name "*.pyc" -exec rm -f {} \;

          # Apply database migrations
          echo "Applying database migrations..."
          python manage.py makemigrations
          python manage.py migrate

          # Start the Gunicorn server
          echo "Starting Gunicorn server..."
          exec gunicorn unky_rick.wsgi:application --config gunicorn.conf.py

  post-deploy-test:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for Postgres to be ready
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for postgres..."
            sleep 1
          done

      - name: Run post-deployment tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
        run: |
          pytest
          
